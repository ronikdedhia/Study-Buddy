{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport var PortalContext = createContext(null);\nexport var usePortalContext = function usePortalContext() {\n  var portal = useContext(PortalContext);\n  if (!portal) {\n    throw new Error('usePortalContext must be used within a PortalContext');\n  }\n  return portal;\n};\nexport var PortalProvider = function PortalProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    portals = _useState2[0],\n    setPortals = _useState2[1];\n  return React.createElement(PortalContext.Provider, {\n    value: {\n      portals: portals,\n      setPortals: setPortals\n    }\n  }, children);\n};\nexport var Outlet = function Outlet() {\n  var _usePortalContext = usePortalContext(),\n    portals = _usePortalContext.portals;\n  return React.createElement(React.Fragment, null, portals.map(function (_ref2) {\n    var key = _ref2.key,\n      children = _ref2.children;\n    return React.createElement(View, {\n      key: key,\n      pointerEvents: \"box-none\",\n      style: StyleSheet.absoluteFill\n    }, children);\n  }));\n};\nexport var Portal = function Portal(_ref3) {\n  var key = _ref3.key,\n    children = _ref3.children;\n  var _usePortalContext2 = usePortalContext(),\n    setPortals = _usePortalContext2.setPortals;\n  var _key = useMemo(function () {\n    return key !== null && key !== void 0 ? key : \"\" + (Date.now() + Math.random());\n  }, [key]);\n  useEffect(function () {\n    setPortals(function (portals) {\n      return [].concat(_toConsumableArray(portals), [{\n        key: _key,\n        children: children\n      }]);\n    });\n    return function () {\n      setPortals(function (portals) {\n        return portals.filter(function (p) {\n          return p.key !== _key;\n        });\n      });\n    };\n  }, [_key, setPortals, children]);\n  return null;\n};","map":{"version":3,"sources":["PortalContext.tsx"],"names":["React","createContext","useContext","useEffect","useMemo","useState","PortalContext","usePortalContext","portal","Error","PortalProvider","children","portals","setPortals","Outlet","map","key","StyleSheet","absoluteFill","Portal","_key","Date","now","Math","random","filter","p"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAyDC,UAAzD,EAAqEC,SAArE,EAAgFC,OAAhF,EAAyFC,QAAzF,QAAyG,OAAzG;AAAA;AAAA;AAGA,OAAO,IAAMC,aAAa,GAAGL,aAAa,CAGhC,IAHgC,CAAnC;AAKP,OAAO,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;EACpC,IAAMC,MAAM,GAAGN,UAAU,CAACI,aAAD,CAAzB;EACA,IAAI,CAACE,MAAL,EAAa;IACX,MAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;EACD;EACD,OAAOD,MAAP;AACD,CANM;AAQP,OAAO,IAAME,cAAwB,GAAG,SAA3BA,cAAwB,CAAG,IAAA,EAAkB;EAAjB,IAAEC,QAAAA,GAAe,IAAA,CAAfA,QAAAA;EACzC,gBAA8BN,QAAQ,CAAgB,EAAhB,CAAtC;IAAA;IAAOO,OAAD;IAAUC,UAAV;EAEN,OAAO,KAAA,CAAA,aAAA,CAAC,aAAD,CAAe,QAAf,EAAA;IAAwB,KAAK,EAAE;MAAED,OAAF,EAAEA,OAAF;MAAWC,UAAAA,EAAAA;IAAX;EAA/B,CAAA,EAAyDF,QAAzD,CAAP;AACD,CAJM;AAMP,OAAO,IAAMG,MAAgB,GAAG,SAAnBA,MAAgB,GAAS;EACpC,wBAAoBP,gBAAgB,EAApC;IAAQK,OAAAA,qBAAAA,OAAAA;EAER,OACE,KAAA,CAAA,aAAA,CAAC,KAAD,CAAO,QAAP,EAAA,IAAA,EACG,OAAO,CAACG,GAAR,CAAY,UAAA,KAAA,EAAA;IAAA,IAAGC,GAAF,GAAD,KAAA,CAAGA,GAAF;MAAOL,QAAAA,GAAR,KAAA,CAAQA,QAAAA;IAAR,OACX,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;MAAM,GAAG,EAAEK,GAAX;MAAgB,aAAa,EAAC,UAA9B;MAAyC,KAAK,EAAEC,UAAU,CAACC;IAA3D,CAAA,EACGP,QADH,CADW;EAAA,CAAZ,CADH,CADF;AASD,CAZM;AAoBP,OAAO,IAAMQ,MAA6B,GAAG,SAAhCA,MAA6B,CAAG,KAAA,EAAuB;EAAtB,IAAEH,GAAF,GAAsB,KAAA,CAApBA,GAAF;IAAOL,QAAAA,GAAe,KAAA,CAAfA,QAAAA;EACnD,yBAAuBJ,gBAAgB,EAAvC;IAAQM,UAAAA,sBAAAA,UAAAA;EAER,IAAMO,IAAI,GAAGhB,OAAO,CAAC;IAAA,OAAMY,GAAN,KAAA,IAAA,IAAMA,GAAN,KAAA,KAAA,CAAA,GAAMA,GAAN,SAAgBK,IAAI,CAACC,GAALD,EAAAA,GAAaE,IAAI,CAACC,MAALD,EAAc,CAA5C;EAAA,GAA+C,CAACP,GAAD,CAA/C,CAApB;EAEAb,SAAS,CAAC,YAAM;IACdU,UAAU,CAAED,UAAAA,OAAD;MAAA,oCAAiBA,OAAJ,IAAa;QAAEI,GAAG,EAAEI,IAAP;QAAaT,QAAAA,EAAAA;MAAb,CAAb;IAAA,CAAd,CAAVE;IAEA,OAAO,YAAM;MACXA,UAAU,CAAED,UAAAA,OAAD;QAAA,OAAaA,OAAO,CAACa,MAARb,CAAgBc,UAAAA,CAAD;UAAA,OAAOA,CAAC,CAACV,GAAFU,KAAUN,IAAhCR;QAAAA,EAAd;MAAA,EAAVC;IACD,CAFD;EAGD,CANQ,EAMN,CAACO,IAAD,EAAOP,UAAP,EAAmBF,QAAnB,CANM,CAATR;EAQA,OAAO,IAAP;AACD,CAdM","sourcesContent":["import React, { createContext, Dispatch, SetStateAction, useContext, useEffect, useMemo, useState } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nexport const PortalContext = createContext<{\n  portals: PortalProps[];\n  setPortals: Dispatch<SetStateAction<PortalProps[]>>;\n} | null>(null);\n\nexport const usePortalContext = () => {\n  const portal = useContext(PortalContext);\n  if (!portal) {\n    throw new Error('usePortalContext must be used within a PortalContext');\n  }\n  return portal;\n};\n\nexport const PortalProvider: React.FC = ({ children }) => {\n  const [portals, setPortals] = useState<PortalProps[]>([]);\n\n  return <PortalContext.Provider value={{ portals, setPortals }}>{children}</PortalContext.Provider>;\n};\n\nexport const Outlet: React.FC = () => {\n  const { portals } = usePortalContext();\n\n  return (\n    <React.Fragment>\n      {portals.map(({ key, children }) => (\n        <View key={key} pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n          {children}\n        </View>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport interface PortalProps {\n  key?: React.Key;\n\n  children?: React.ReactNode;\n}\n\nexport const Portal: React.FC<PortalProps> = ({ key, children }) => {\n  const { setPortals } = usePortalContext();\n\n  const _key = useMemo(() => key ?? `${Date.now() + Math.random()}`, [key]);\n\n  useEffect(() => {\n    setPortals((portals) => [...portals, { key: _key, children }]);\n\n    return () => {\n      setPortals((portals) => portals.filter((p) => p.key !== _key));\n    };\n  }, [_key, setPortals, children]);\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}