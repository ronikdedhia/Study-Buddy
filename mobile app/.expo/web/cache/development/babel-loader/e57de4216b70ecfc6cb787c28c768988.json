{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"variant\", \"title\", \"subtitle\", \"centerTitle\", \"leading\", \"trailing\", \"color\", \"tintColor\", \"transparent\", \"enableColorOnDark\", \"style\", \"contentContainerStyle\", \"titleContentStyle\", \"titleStyle\", \"subtitleStyle\", \"leadingContainerStyle\", \"trailingContainerStyle\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Surface from \"./Surface\";\nimport Text from \"./Text\";\nimport { useSurfaceColorValue } from \"./hooks/use-surface-color\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nimport { useTheme } from \"./base/ThemeContext\";\nvar AppBar = function AppBar(_ref) {\n  var _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'top' : _ref$variant,\n    title = _ref.title,\n    subtitle = _ref.subtitle,\n    _ref$centerTitle = _ref.centerTitle,\n    centerTitle = _ref$centerTitle === void 0 ? false : _ref$centerTitle,\n    leading = _ref.leading,\n    trailing = _ref.trailing,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'primary' : _ref$color,\n    tintColor = _ref.tintColor,\n    _ref$transparent = _ref.transparent,\n    transparent = _ref$transparent === void 0 ? false : _ref$transparent,\n    _ref$enableColorOnDar = _ref.enableColorOnDark,\n    enableColorOnDark = _ref$enableColorOnDar === void 0 ? false : _ref$enableColorOnDar,\n    style = _ref.style,\n    contentContainerStyle = _ref.contentContainerStyle,\n    titleContentStyle = _ref.titleContentStyle,\n    titleStyle = _ref.titleStyle,\n    subtitleStyle = _ref.subtitleStyle,\n    leadingContainerStyle = _ref.leadingContainerStyle,\n    trailingContainerStyle = _ref.trailingContainerStyle,\n    children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var theme = useTheme();\n  var surfaceColor = useSurfaceColorValue(variant === 'top' ? 4 : 8);\n  var palette = usePaletteColor(theme.colorScheme === 'dark' && !enableColorOnDark ? surfaceColor : color, tintColor);\n  var titleElement = typeof title === 'string' ? React.createElement(Text, {\n    variant: \"h6\",\n    style: [{\n      color: palette.on\n    }, titleStyle]\n  }, title) : typeof title === 'function' ? title({\n    color: palette.on\n  }) : title;\n  var subtitleElement = typeof subtitle === 'string' ? React.createElement(Text, {\n    variant: \"caption\",\n    style: [{\n      color: palette.on\n    }, subtitleStyle]\n  }, subtitle) : typeof subtitle === 'function' ? subtitle({\n    color: palette.on\n  }) : subtitle;\n  var leadingElement = typeof leading === 'function' ? leading({\n    color: palette.on,\n    size: 24\n  }) : leading;\n  var trailingElement = typeof trailing === 'function' ? trailing({\n    color: palette.on,\n    size: 24\n  }) : trailing;\n  return React.createElement(Surface, _extends({\n    style: [{\n      backgroundColor: transparent ? 'transparent' : palette.main,\n      zIndex: variant === 'top' ? 4 : 8\n    }, style],\n    elevation: transparent ? 0 : variant === 'top' ? 4 : 8\n  }, props), React.createElement(View, {\n    style: [styles.contentContainer, contentContainerStyle]\n  }, leadingElement && React.createElement(View, {\n    style: [styles.leadingContainer, leadingContainerStyle]\n  }, leadingElement), React.createElement(View, {\n    style: [centerTitle ? [StyleSheet.absoluteFill, styles.centeredTitleContainer] : styles.titleContainer, titleContentStyle],\n    pointerEvents: centerTitle ? 'none' : undefined\n  }, titleElement, subtitleElement), trailingElement && React.createElement(View, {\n    style: [styles.trailingContainer, trailingContainerStyle]\n  }, trailingElement)), children);\n};\nvar styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: Platform.select({\n      ios: 44,\n      web: 64,\n      default: 56\n    }),\n    paddingHorizontal: 16\n  },\n  leadingContainer: {\n    marginStart: -12,\n    marginEnd: 20\n  },\n  trailingContainer: {\n    marginStart: 20,\n    marginEnd: -12\n  },\n  titleContainer: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  centeredTitleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default AppBar;","map":{"version":3,"sources":["AppBar.tsx"],"names":["React","Surface","Text","useSurfaceColorValue","usePaletteColor","useTheme","AppBar","variant","title","subtitle","centerTitle","leading","trailing","color","tintColor","transparent","enableColorOnDark","style","contentContainerStyle","titleContentStyle","titleStyle","subtitleStyle","leadingContainerStyle","trailingContainerStyle","children","props","theme","surfaceColor","palette","colorScheme","titleElement","on","subtitleElement","leadingElement","size","trailingElement","backgroundColor","main","zIndex","styles","contentContainer","leadingContainer","StyleSheet","absoluteFill","centeredTitleContainer","titleContainer","undefined","trailingContainer","create","flexDirection","justifyContent","alignItems","height","select","ios","web","default","paddingHorizontal","marginStart","marginEnd","flex"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Platform, StyleProp, StyleSheet, TextStyle, View, ViewStyle } from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Text from './Text';\nimport { useSurfaceColorValue } from './hooks/use-surface-color';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useTheme } from './base/ThemeContext';\n\nexport interface AppBarProps extends SurfaceProps {\n  /**\n   * Whether you want to place the AppBar at the top or the bottom of the screen.\n   *\n   * @default \"top\"\n   */\n  variant?: 'top' | 'bottom';\n\n  /**\n   * The primary text to display in the AppBar.\n   */\n  title?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * The secondary text to display in the AppBar.\n   */\n  subtitle?: string | React.ReactNode | ((props: { color: string }) => React.ReactNode | null) | null;\n\n  /**\n   * Whether the `title` and `subtitle` should be centered.\n   *\n   * @default false\n   */\n  centerTitle?: boolean;\n\n  /**\n   * The element displayed before the `title`.\n   */\n  leading?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The element displayed after the `title`.\n   */\n  trailing?: React.ReactNode | ((props: { color: string; size: number }) => React.ReactNode | null) | null;\n\n  /**\n   * The fill color of the AppBar's background.\n   *\n   * @default \"primary\"\n   */\n  color?: Color;\n\n  /**\n   * The color of the AppBar's content (title, subtitle, icons, etc.).\n   */\n  tintColor?: Color;\n\n  /**\n   * Whether the AppBar's background is transparent.\n   *\n   * @default false\n   */\n  transparent?: boolean;\n\n  /**\n   * If `true`, the `color` prop will be applied in dark mode.\n   *\n   * @default false\n   */\n  enableColorOnDark?: boolean;\n\n  /**\n   * The style of the content container view.\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title and subtitle container view.\n   */\n  titleContentStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the title text.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the subtitle text.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n\n  /**\n   * The style of the leading element container view.\n   */\n  leadingContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * The style of the trailing element container view.\n   */\n  trailingContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst AppBar: React.FC<AppBarProps> = ({\n  variant = 'top',\n  title,\n  subtitle,\n  centerTitle = false,\n  leading,\n  trailing,\n  color = 'primary',\n  tintColor,\n  transparent = false,\n  enableColorOnDark = false,\n  style,\n  contentContainerStyle,\n  titleContentStyle,\n  titleStyle,\n  subtitleStyle,\n  leadingContainerStyle,\n  trailingContainerStyle,\n  children,\n  ...props\n}) => {\n  const theme = useTheme();\n\n  const surfaceColor = useSurfaceColorValue(variant === 'top' ? 4 : 8);\n\n  const palette = usePaletteColor(theme.colorScheme === 'dark' && !enableColorOnDark ? surfaceColor : color, tintColor);\n\n  const titleElement =\n    typeof title === 'string' ? (\n      <Text variant=\"h6\" style={[{ color: palette.on }, titleStyle]}>\n        {title}\n      </Text>\n    ) : typeof title === 'function' ? (\n      title({ color: palette.on })\n    ) : (\n      title\n    );\n\n  const subtitleElement =\n    typeof subtitle === 'string' ? (\n      <Text variant=\"caption\" style={[{ color: palette.on }, subtitleStyle]}>\n        {subtitle}\n      </Text>\n    ) : typeof subtitle === 'function' ? (\n      subtitle({ color: palette.on })\n    ) : (\n      subtitle\n    );\n\n  const leadingElement = typeof leading === 'function' ? leading({ color: palette.on, size: 24 }) : leading;\n\n  const trailingElement = typeof trailing === 'function' ? trailing({ color: palette.on, size: 24 }) : trailing;\n\n  return (\n    <Surface\n      style={[\n        {\n          backgroundColor: transparent ? 'transparent' : palette.main,\n          zIndex: variant === 'top' ? 4 : 8,\n        },\n        style,\n      ]}\n      elevation={transparent ? 0 : variant === 'top' ? 4 : 8}\n      {...props}\n    >\n      <View style={[styles.contentContainer, contentContainerStyle]}>\n        {leadingElement && <View style={[styles.leadingContainer, leadingContainerStyle]}>{leadingElement}</View>}\n        <View\n          style={[\n            centerTitle ? [StyleSheet.absoluteFill, styles.centeredTitleContainer] : styles.titleContainer,\n            titleContentStyle,\n          ]}\n          pointerEvents={centerTitle ? 'none' : undefined}\n        >\n          {titleElement}\n          {subtitleElement}\n        </View>\n        {trailingElement && <View style={[styles.trailingContainer, trailingContainerStyle]}>{trailingElement}</View>}\n      </View>\n      {children}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: Platform.select({ ios: 44, web: 64, default: 56 }),\n    paddingHorizontal: 16,\n  },\n  leadingContainer: {\n    marginStart: -12,\n    marginEnd: 20,\n  },\n  trailingContainer: {\n    marginStart: 20,\n    marginEnd: -12,\n  },\n  titleContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  centeredTitleContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default AppBar;\n"]},"metadata":{},"sourceType":"module"}