{"ast":null,"code":"import React from 'react';\nexport function getValidChildren(children) {\n  return React.Children.toArray(children).filter(function (child) {\n    return React.isValidElement(child);\n  });\n}","map":{"version":3,"sources":["utilities.ts"],"names":["React","getValidChildren","children","Children","toArray","filter","child","isValidElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAqD;EAC1D,OAAOF,KAAK,CAACG,QAANH,CAAeI,OAAfJ,CAAuBE,QAAvBF,CAAAA,CAAiCK,MAAjCL,CAAyCM,UAAAA,KAAD;IAAA,OAC7CN,KAAK,CAACO,cAANP,CAAqBM,KAArBN,CADKA;EAAAA,EAAP;AAGD","sourcesContent":["import React from 'react';\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport function getValidChildren(children: React.ReactNode) {\n  return React.Children.toArray(children).filter((child) =>\n    React.isValidElement(child)\n  ) as React.ReactElement[];\n}\n"]},"metadata":{},"sourceType":"module"}