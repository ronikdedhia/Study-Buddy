{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"pressEffect\", \"pressEffectColor\", \"onLayout\", \"onPressIn\", \"onPressOut\", \"onFocus\", \"onBlur\", \"android_ripple\", \"onMouseEnter\", \"onMouseLeave\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useCallback, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNPressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport chroma from 'chroma-js';\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nvar Pressable = function Pressable(_ref) {\n  var _ref$pressEffect = _ref.pressEffect,\n    pressEffect = _ref$pressEffect === void 0 ? Platform.select({\n      android: 'android-ripple',\n      web: 'ripple',\n      default: 'highlight'\n    }) : _ref$pressEffect,\n    _ref$pressEffectColor = _ref.pressEffectColor,\n    pressEffectColor = _ref$pressEffectColor === void 0 ? 'on-background' : _ref$pressEffectColor,\n    onLayout = _ref.onLayout,\n    onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    onFocus = _ref.onFocus,\n    onBlur = _ref.onBlur,\n    android_ripple = _ref.android_ripple,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseLeave = _ref.onMouseLeave,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _usePaletteColor = usePaletteColor(pressEffectColor),\n    color = _usePaletteColor.main;\n  var _useState = useState({\n      width: 0,\n      height: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    size = _useState2[0],\n    setSize = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    ripples = _useState4[0],\n    setRipples = _useState4[1];\n  var handleLayout = useCallback(function (event) {\n    var _event$nativeEvent$la = event.nativeEvent.layout,\n      width = _event$nativeEvent$la.width,\n      height = _event$nativeEvent$la.height;\n    setSize({\n      width: width,\n      height: height\n    });\n    onLayout === null || onLayout === void 0 ? void 0 : onLayout(event);\n  }, [onLayout]);\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    pressed = _useState6[0],\n    setPressed = _useState6[1];\n  var handlePressIn = useCallback(function (event) {\n    setPressed(true);\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(event);\n    if (pressEffect === 'ripple') {\n      var _event$nativeEvent = event.nativeEvent,\n        locationX = _event$nativeEvent.locationX,\n        locationY = _event$nativeEvent.locationY;\n      var x = (locationX !== null && locationX !== void 0 ? locationX : size.width / 2) - 0.5;\n      var y = (locationY !== null && locationY !== void 0 ? locationY : size.height / 2) - 0.5;\n      var scale = new Animated.Value(0);\n      var opacity = new Animated.Value(1);\n      var ripple = {\n        key: \"\" + (Date.now() + Math.random()),\n        style: {\n          start: x,\n          top: y,\n          transform: [{\n            scale: scale\n          }],\n          opacity: opacity\n        }\n      };\n      setRipples(function (prevState) {\n        return [].concat(_toConsumableArray(prevState), [ripple]);\n      });\n      Animated.timing(scale, {\n        toValue: Math.max(size.width * 1.25 + Math.abs(size.width / 2 - x) * 2, size.height * 1.25 + Math.abs(size.height / 2 - y) * 2),\n        easing: Easing.out(Easing.ease),\n        duration: 400,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [onPressIn, pressEffect, size]);\n  var handlePressOut = useCallback(function (event) {\n    setPressed(false);\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(event);\n    if (pressEffect === 'ripple') {\n      Animated.timing(ripples[ripples.length - 1].style.opacity, {\n        toValue: 0,\n        easing: Easing.out(Easing.ease),\n        duration: 400,\n        useNativeDriver: false\n      }).start(function () {\n        setRipples(function (prevState) {\n          return prevState.slice(1);\n        });\n      });\n    }\n  }, [pressEffect, ripples, onPressOut]);\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    focused = _useState8[0],\n    setFocused = _useState8[1];\n  var handleFocus = useCallback(function (event) {\n    setFocused(true);\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(event);\n  }, [onFocus]);\n  var handleBlur = useCallback(function (event) {\n    setFocused(false);\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(event);\n  }, [onBlur]);\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    hovered = _useState10[0],\n    setHovered = _useState10[1];\n  var handleMouseEnter = useCallback(function (event) {\n    setHovered(true);\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(event);\n  }, [onMouseEnter]);\n  var handleMouseLeave = useCallback(function (event) {\n    setHovered(false);\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(event);\n  }, [onMouseLeave]);\n  return React.createElement(RNPressable, _extends({\n    android_ripple: pressEffect === 'android-ripple' ? android_ripple !== null && android_ripple !== void 0 ? android_ripple : {\n      color: chroma(color).alpha(0.26).hex()\n    } : undefined,\n    onLayout: handleLayout,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }, rest), React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent'\n    }, {\n      transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n    }]\n  }), focused && !rest.disabled && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: chroma(color).alpha(0.12).hex()\n    }]\n  }), pressEffect === 'highlight' && pressed && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, {\n      backgroundColor: chroma(color).alpha(0.26).hex()\n    }]\n  }), pressEffect === 'ripple' && ripples.length !== 0 && React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.effectContainer]\n  }, ripples.map(function (ripple) {\n    return React.createElement(Animated.View, {\n      key: ripple.key,\n      style: [styles.ripple, {\n        backgroundColor: chroma(color).alpha(0.1).hex()\n      }, ripple.style]\n    });\n  })), children);\n};\nvar styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden'\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5\n  }\n});\nexport default Pressable;","map":{"version":3,"sources":["Pressable.tsx"],"names":["React","useCallback","useState","chroma","usePaletteColor","Pressable","pressEffect","select","android","web","default","pressEffectColor","onLayout","onPressIn","onPressOut","onFocus","onBlur","android_ripple","onMouseEnter","onMouseLeave","children","rest","main","color","size","setSize","width","height","ripples","setRipples","handleLayout","event","nativeEvent","layout","pressed","setPressed","handlePressIn","locationX","locationY","x","y","scale","Animated","Value","opacity","ripple","key","Date","now","Math","random","style","start","top","transform","prevState","timing","toValue","max","abs","easing","Easing","out","ease","duration","useNativeDriver","handlePressOut","length","slice","focused","setFocused","handleFocus","handleBlur","hovered","setHovered","handleMouseEnter","handleMouseLeave","alpha","hex","undefined","StyleSheet","absoluteFill","backgroundColor","disabled","transition","styles","effectContainer","map","create","overflow","position","borderRadius"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  Platform,\n  Pressable as RNPressable,\n  PressableProps as RNPressableProps,\n  StyleSheet,\n  TargetedEvent,\n  View,\n} from 'react-native';\nimport chroma from 'chroma-js';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\n\nexport interface PressableProps extends RNPressableProps {\n  pressEffect?: 'none' | 'highlight' | 'ripple' | 'android-ripple';\n\n  pressEffectColor?: Color;\n\n  onMouseEnter?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  onMouseLeave?: (event: NativeSyntheticEvent<TargetedEvent>) => void;\n\n  style?: any;\n}\n\nconst Pressable: React.FC<PressableProps> = ({\n  pressEffect = Platform.select({ android: 'android-ripple', web: 'ripple', default: 'highlight' }),\n  pressEffectColor = 'on-background',\n  onLayout,\n  onPressIn,\n  onPressOut,\n  onFocus,\n  onBlur,\n  android_ripple,\n  onMouseEnter,\n  onMouseLeave,\n  children,\n  ...rest\n}) => {\n  const { main: color } = usePaletteColor(pressEffectColor);\n\n  const [size, setSize] = useState({ width: 0, height: 0 });\n\n  const [ripples, setRipples] = useState<{ key: string; style: any }[]>([]);\n\n  const handleLayout = useCallback(\n    (event: LayoutChangeEvent) => {\n      const { width, height } = event.nativeEvent.layout;\n      setSize({ width, height });\n      onLayout?.(event);\n    },\n    [onLayout]\n  );\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(true);\n      onPressIn?.(event);\n\n      if (pressEffect === 'ripple') {\n        const { locationX, locationY } = event.nativeEvent;\n\n        const x = (locationX ?? size.width / 2) - 0.5;\n        const y = (locationY ?? size.height / 2) - 0.5;\n\n        const scale = new Animated.Value(0);\n        const opacity = new Animated.Value(1);\n\n        const ripple = {\n          key: `${Date.now() + Math.random()}`,\n          style: { start: x, top: y, transform: [{ scale }], opacity },\n        };\n\n        setRipples((prevState) => [...prevState, ripple]);\n\n        Animated.timing(scale, {\n          toValue: Math.max(\n            size.width * 1.25 + Math.abs(size.width / 2 - x) * 2,\n            size.height * 1.25 + Math.abs(size.height / 2 - y) * 2\n          ),\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start();\n      }\n    },\n    [onPressIn, pressEffect, size]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      setPressed(false);\n      onPressOut?.(event);\n\n      if (pressEffect === 'ripple') {\n        Animated.timing(ripples[ripples.length - 1].style.opacity, {\n          toValue: 0,\n          easing: Easing.out(Easing.ease),\n          duration: 400,\n          useNativeDriver: false,\n        }).start(() => {\n          setRipples((prevState) => prevState.slice(1));\n        });\n      }\n    },\n    [pressEffect, ripples, onPressOut]\n  );\n\n  const [focused, setFocused] = useState(false);\n\n  const handleFocus = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(true);\n      onFocus?.(event);\n    },\n    [onFocus]\n  );\n\n  const handleBlur = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setFocused(false);\n      onBlur?.(event);\n    },\n    [onBlur]\n  );\n\n  const [hovered, setHovered] = useState(false);\n\n  const handleMouseEnter = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(true);\n      onMouseEnter?.(event);\n    },\n    [onMouseEnter]\n  );\n\n  const handleMouseLeave = useCallback(\n    (event: NativeSyntheticEvent<TargetedEvent>) => {\n      setHovered(false);\n      onMouseLeave?.(event);\n    },\n    [onMouseLeave]\n  );\n\n  return (\n    <RNPressable\n      android_ripple={\n        pressEffect === 'android-ripple' ? android_ripple ?? { color: chroma(color).alpha(0.26).hex() } : undefined\n      }\n      onLayout={handleLayout}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n      {...({ onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave } as any)}\n      {...rest}\n    >\n      <View\n        style={[\n          StyleSheet.absoluteFill,\n          {\n            backgroundColor: hovered && !rest.disabled ? chroma(color).alpha(0.04).hex() : 'transparent',\n          },\n          { transition: 'background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms' } as any,\n        ]}\n      />\n\n      {focused && !rest.disabled && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.12).hex() }]} />\n      )}\n\n      {pressEffect === 'highlight' && pressed && (\n        <View style={[StyleSheet.absoluteFill, { backgroundColor: chroma(color).alpha(0.26).hex() }]} />\n      )}\n\n      {pressEffect === 'ripple' && ripples.length !== 0 && (\n        <View style={[StyleSheet.absoluteFill, styles.effectContainer]}>\n          {ripples.map((ripple) => (\n            <Animated.View\n              key={ripple.key}\n              style={[styles.ripple, { backgroundColor: chroma(color).alpha(0.1).hex() }, ripple.style]}\n            />\n          ))}\n        </View>\n      )}\n\n      {children}\n    </RNPressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  effectContainer: {\n    overflow: 'hidden',\n  },\n  ripple: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    borderRadius: 0.5,\n  },\n});\n\nexport default Pressable;\n"]},"metadata":{},"sourceType":"module"}