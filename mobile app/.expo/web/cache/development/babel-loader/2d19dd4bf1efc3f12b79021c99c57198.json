{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"color\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { createContext, useContext } from 'react';\nimport { usePaletteColor } from \"../hooks/use-palette-color\";\nexport var IconComponentContext = createContext(null);\nexport var useIconComponent = function useIconComponent() {\n  return useContext(IconComponentContext);\n};\nexport var IconComponentProvider = function IconComponentProvider(_ref) {\n  var IconComponent = _ref.IconComponent,\n    children = _ref.children;\n  return React.createElement(IconComponentContext.Provider, {\n    value: IconComponent !== null && IconComponent !== void 0 ? IconComponent : null\n  }, children);\n};\nexport var Icon = function Icon(_ref2) {\n  var _ref2$color = _ref2.color,\n    color = _ref2$color === void 0 ? 'on-background' : _ref2$color,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var IconComponent = useIconComponent();\n  if (!IconComponent) {\n    throw new Error('`IconComponent` is undefined. Seems like you forgot to wrap your component with `Provider`.');\n  }\n  var _usePaletteColor = usePaletteColor(color),\n    main = _usePaletteColor.main;\n  return React.createElement(IconComponent, _extends({}, rest, {\n    color: main\n  }));\n};","map":{"version":3,"sources":["IconComponentContext.tsx"],"names":["React","createContext","useContext","usePaletteColor","IconComponentContext","useIconComponent","IconComponentProvider","IconComponent","children","Icon","color","rest","Error","main"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAAgBC,eAAhB;AAQA,OAAO,IAAMC,oBAAoB,GAAGH,aAAa,CAAuB,IAAvB,CAA1C;AAEP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgB;EAAA,OAASH,UAAU,CAACE,oBAAD,CAAzC;AAAA;AAEP,OAAO,IAAME,qBAA2D,GAAG,SAA9DA,qBAA2D,CAAG,IAAA,EAAiC;EAAhC,IAAEC,aAAF,GAAgC,IAAA,CAA9BA,aAAF;IAAiBC,QAAAA,GAAe,IAAA,CAAfA,QAAAA;EAC3F,OAAO,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAsB,QAAtB,EAAA;IAA+B,KAAK,EAAED,aAAF,KAAA,IAAA,IAAEA,aAAF,KAAA,KAAA,CAAA,GAAEA,aAAF,GAAmB;EAAvD,CAAA,EAA8DC,QAA9D,CAAP;AACD,CAFM;AAcP,OAAO,IAAMC,IAAyB,GAAG,SAA5BA,IAAyB,CAAG,KAAA,EAA0C;EAAzC,kBAAyC,KAAA,CAAvCC,KAAK;IAALA,KAAK,4BAAG,eAAV;IAA8BC,IAAAA,4BAAW,KAAA;EACjF,IAAMJ,aAAa,GAAGF,gBAAgB,EAAtC;EACA,IAAI,CAACE,aAAL,EAAoB;IAClB,MAAM,IAAIK,KAAJ,CAAU,6FAAV,CAAN;EACD;EACD,uBAAiBT,eAAe,CAACO,KAAD,CAAhC;IAAQG,IAAAA,oBAAAA,IAAAA;EACR,OAAO,KAAA,CAAA,aAAA,CAAC,aAAD,EAAA,QAAA,CAAA,CAAA,CAAA,EAAmBF,IAAnB,EAAA;IAAyB,KAAK,EAAEE;EAAhC,CAAA,CAAA,CAAP;AACD,CAPM","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport { Color, usePaletteColor } from '../hooks/use-palette-color';\n\nexport type IconComponent = React.ComponentType<IconProps>;\n\nexport interface IconComponentProviderProps {\n  IconComponent?: IconComponent | null;\n}\n\nexport const IconComponentContext = createContext<IconComponent | null>(null);\n\nexport const useIconComponent = () => useContext(IconComponentContext);\n\nexport const IconComponentProvider: React.FC<IconComponentProviderProps> = ({ IconComponent, children }) => {\n  return <IconComponentContext.Provider value={IconComponent ?? null}>{children}</IconComponentContext.Provider>;\n};\n\nexport interface IconProps {\n  name: string;\n\n  size?: number;\n\n  color?: Color;\n\n  [key: string]: any;\n}\n\nexport const Icon: React.FC<IconProps> = ({ color = 'on-background', ...rest }) => {\n  const IconComponent = useIconComponent();\n  if (!IconComponent) {\n    throw new Error('`IconComponent` is undefined. Seems like you forgot to wrap your component with `Provider`.');\n  }\n  const { main } = usePaletteColor(color);\n  return <IconComponent {...rest} color={main} />;\n};\n"]},"metadata":{},"sourceType":"module"}