{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"icon\", \"label\", \"variant\", \"size\", \"color\", \"tintColor\", \"loading\", \"loadingIndicator\", \"loadingIndicatorPosition\", \"visible\", \"style\", \"pressableContainerStyle\", \"contentContainerStyle\", \"iconContainerStyle\", \"labelContainerStyle\", \"labelStyle\", \"loadingOverlayContainerStyle\", \"pressEffect\", \"pressEffectColor\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onLongPress\", \"onBlur\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"delayLongPress\", \"disabled\", \"hitSlop\", \"pressRetentionOffset\", \"android_disableSound\", \"android_ripple\", \"testOnly_pressed\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Surface from \"./Surface\";\nimport Pressable from \"./Pressable\";\nimport Text from \"./Text\";\nimport ActivityIndicator from \"./ActivityIndicator\";\nimport { usePaletteColor } from \"./hooks/use-palette-color\";\nimport { useStyles } from \"./hooks/use-styles\";\nimport { useAnimatedElevation } from \"./hooks/use-animated-elevation\";\nvar FAB = function FAB(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? 'standard' : _ref$variant,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'default' : _ref$size,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'secondary' : _ref$color,\n    tintColor = _ref.tintColor,\n    _ref$loading = _ref.loading,\n    loading = _ref$loading === void 0 ? false : _ref$loading,\n    loadingIndicator = _ref.loadingIndicator,\n    _ref$loadingIndicator = _ref.loadingIndicatorPosition,\n    loadingIndicatorPosition = _ref$loadingIndicator === void 0 ? 'icon' : _ref$loadingIndicator,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    style = _ref.style,\n    pressableContainerStyle = _ref.pressableContainerStyle,\n    contentContainerStyle = _ref.contentContainerStyle,\n    iconContainerStyle = _ref.iconContainerStyle,\n    labelContainerStyle = _ref.labelContainerStyle,\n    labelStyle = _ref.labelStyle,\n    loadingOverlayContainerStyle = _ref.loadingOverlayContainerStyle,\n    pressEffect = _ref.pressEffect,\n    pressEffectColor = _ref.pressEffectColor,\n    onPress = _ref.onPress,\n    onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    onLongPress = _ref.onLongPress,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseLeave = _ref.onMouseLeave,\n    delayLongPress = _ref.delayLongPress,\n    disabled = _ref.disabled,\n    hitSlop = _ref.hitSlop,\n    pressRetentionOffset = _ref.pressRetentionOffset,\n    android_disableSound = _ref.android_disableSound,\n    android_ripple = _ref.android_ripple,\n    testOnly_pressed = _ref.testOnly_pressed,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var palette = usePaletteColor(color, tintColor);\n  var hasIcon = useMemo(function () {\n    return icon || loading && loadingIndicatorPosition === 'icon';\n  }, [icon, loading, loadingIndicatorPosition]);\n  var styles = useStyles(function () {\n    return {\n      container: {\n        backgroundColor: palette.main,\n        borderRadius: size === 'default' ? 28 : 20\n      },\n      pressableContainer: {\n        borderRadius: size === 'default' ? 28 : 20,\n        overflow: 'hidden'\n      },\n      pressable: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingStart: variant === 'extended' ? hasIcon ? size === 'default' ? 12 : 6 : size === 'default' ? 20 : 10 : size === 'default' ? 16 : 8,\n        paddingEnd: variant === 'extended' ? size === 'default' ? 20 : 10 : size === 'default' ? 16 : 8,\n        paddingVertical: size === 'default' ? 16 : 8\n      },\n      iconContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 24,\n        height: 24\n      },\n      labelContainer: {\n        marginStart: hasIcon ? size === 'default' ? 12 : 6 : 0\n      },\n      loadingOverlayContainer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: palette.main\n      })\n    };\n  }, [variant, size, palette, hasIcon]);\n  var animated = useRef(new Animated.Value(visible ? 1 : 0)).current;\n  useEffect(function () {\n    Animated.timing(animated, {\n      toValue: visible ? 1 : 0,\n      duration: 200,\n      useNativeDriver: false\n    }).start();\n  }, [visible]);\n  var getLoadingIndicator = function getLoadingIndicator() {\n    if (!loadingIndicator) return React.createElement(ActivityIndicator, {\n      color: palette.on\n    });\n    switch (typeof loadingIndicator) {\n      case 'string':\n        return React.createElement(Text, {\n          variant: \"button\",\n          style: {\n            color: palette.on\n          }\n        }, loadingIndicator);\n      case 'function':\n        return loadingIndicator({\n          color: palette.on\n        });\n      default:\n        return loadingIndicator;\n    }\n  };\n  var getIcon = function getIcon() {\n    if (loading && loadingIndicatorPosition === 'icon') return getLoadingIndicator();\n    return typeof icon === 'function' ? icon({\n      color: palette.on,\n      size: 24\n    }) : icon;\n  };\n  var getLabel = function getLabel() {\n    switch (typeof label) {\n      case 'string':\n        return React.createElement(Text, {\n          variant: \"button\",\n          selectable: false,\n          style: [{\n            color: palette.on\n          }, labelStyle]\n        }, label);\n      case 'function':\n        return label({\n          color: palette.on\n        });\n      default:\n        return label;\n    }\n  };\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    pressed = _useState2[0],\n    setPressed = _useState2[1];\n  var handlePressIn = useCallback(function (event) {\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(event);\n    setPressed(true);\n  }, [onPressIn]);\n  var handlePressOut = useCallback(function (event) {\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(event);\n    setPressed(false);\n  }, [onPressOut]);\n  var animatedElevation = useAnimatedElevation(pressed ? 12 : 6);\n  return React.createElement(Surface, _extends({\n    style: [animatedElevation, styles.container, {\n      transform: [{\n        scale: animated\n      }]\n    }, style]\n  }, rest), React.createElement(View, {\n    style: [styles.pressableContainer, pressableContainerStyle]\n  }, React.createElement(Pressable, {\n    style: [styles.pressable, contentContainerStyle],\n    pressEffect: pressEffect,\n    pressEffectColor: pressEffectColor !== null && pressEffectColor !== void 0 ? pressEffectColor : palette.on,\n    onPress: onPress,\n    onPressIn: handlePressIn,\n    onPressOut: handlePressOut,\n    onLongPress: onLongPress,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    delayLongPress: delayLongPress,\n    disabled: disabled,\n    hitSlop: hitSlop,\n    pressRetentionOffset: pressRetentionOffset,\n    android_disableSound: android_disableSound,\n    android_ripple: android_ripple,\n    testOnly_pressed: testOnly_pressed\n  }, hasIcon && React.createElement(View, {\n    style: [styles.iconContainer, iconContainerStyle]\n  }, getIcon()), variant === 'extended' && React.createElement(View, {\n    style: [styles.labelContainer, labelContainerStyle]\n  }, getLabel()), loading && loadingIndicatorPosition === 'overlay' && React.createElement(View, {\n    style: [styles.loadingOverlayContainer, loadingOverlayContainerStyle]\n  }, getLoadingIndicator()))));\n};\nexport default FAB;","map":{"version":3,"sources":["FAB.tsx"],"names":["React","useCallback","useEffect","useMemo","useRef","useState","Surface","Pressable","Text","ActivityIndicator","usePaletteColor","useStyles","useAnimatedElevation","FAB","icon","label","variant","size","color","tintColor","loading","loadingIndicator","loadingIndicatorPosition","visible","style","pressableContainerStyle","contentContainerStyle","iconContainerStyle","labelContainerStyle","labelStyle","loadingOverlayContainerStyle","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","rest","palette","hasIcon","styles","container","backgroundColor","main","borderRadius","pressableContainer","overflow","pressable","flexDirection","alignItems","paddingStart","paddingEnd","paddingVertical","iconContainer","justifyContent","width","height","labelContainer","marginStart","loadingOverlayContainer","StyleSheet","absoluteFillObject","animated","Animated","Value","current","timing","toValue","duration","useNativeDriver","start","getLoadingIndicator","on","getIcon","getLabel","pressed","setPressed","handlePressIn","event","handlePressOut","animatedElevation","transform","scale"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,EAAiDC,MAAjD,EAAyDC,QAAzD,QAAyE,OAAzE;AAAA;AAAA;AAAA;AAEA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,IAAP;AACA,OAAOC,iBAAP;AACA,SAAgBC,eAAhB;AACA,SAASC,SAAT;AACA,SAASC,oBAAT;AAoCA,IAAMC,GAAuB,GAAG,SAA1BA,GAAuB,CAAG,IAAA,EAqC1B;EArC2B,IAC/BC,IAD+B,GAqC3B,IAAA,CApCJA,IAD+B;IAE/BC,KAF+B,GAqC3B,IAAA,CAnCJA,KAF+B;IAAA,eAqC3B,IAAA,CAlCJC,OAAO;IAAPA,OAAO,6BAAG,UAHqB;IAAA,YAqC3B,IAAA,CAjCJC,IAAI;IAAJA,IAAI,0BAAG,SAJwB;IAAA,aAqC3B,IAAA,CAhCJC,KAAK;IAALA,KAAK,2BAAG,WALuB;IAM/BC,SAN+B,GAqC3B,IAAA,CA/BJA,SAN+B;IAAA,eAqC3B,IAAA,CA9BJC,OAAO;IAAPA,OAAO,6BAAG,KAPqB;IAQ/BC,gBAR+B,GAqC3B,IAAA,CA7BJA,gBAR+B;IAAA,wBAqC3B,IAAA,CA5BJC,wBAAwB;IAAxBA,wBAAwB,sCAAG,MATI;IAAA,eAqC3B,IAAA,CA3BJC,OAAO;IAAPA,OAAO,6BAAG,IAVqB;IAW/BC,KAX+B,GAqC3B,IAAA,CA1BJA,KAX+B;IAY/BC,uBAZ+B,GAqC3B,IAAA,CAzBJA,uBAZ+B;IAa/BC,qBAb+B,GAqC3B,IAAA,CAxBJA,qBAb+B;IAc/BC,kBAd+B,GAqC3B,IAAA,CAvBJA,kBAd+B;IAe/BC,mBAf+B,GAqC3B,IAAA,CAtBJA,mBAf+B;IAgB/BC,UAhB+B,GAqC3B,IAAA,CArBJA,UAhB+B;IAiB/BC,4BAjB+B,GAqC3B,IAAA,CApBJA,4BAjB+B;IAmB/BC,WAnB+B,GAqC3B,IAAA,CAlBJA,WAnB+B;IAoB/BC,gBApB+B,GAqC3B,IAAA,CAjBJA,gBApB+B;IAqB/BC,OArB+B,GAqC3B,IAAA,CAhBJA,OArB+B;IAsB/BC,SAtB+B,GAqC3B,IAAA,CAfJA,SAtB+B;IAuB/BC,UAvB+B,GAqC3B,IAAA,CAdJA,UAvB+B;IAwB/BC,WAxB+B,GAqC3B,IAAA,CAbJA,WAxB+B;IAyB/BC,MAzB+B,GAqC3B,IAAA,CAZJA,MAzB+B;IA0B/BC,OA1B+B,GAqC3B,IAAA,CAXJA,OA1B+B;IA2B/BC,YA3B+B,GAqC3B,IAAA,CAVJA,YA3B+B;IA4B/BC,YA5B+B,GAqC3B,IAAA,CATJA,YA5B+B;IA6B/BC,cA7B+B,GAqC3B,IAAA,CARJA,cA7B+B;IA8B/BC,QA9B+B,GAqC3B,IAAA,CAPJA,QA9B+B;IA+B/BC,OA/B+B,GAqC3B,IAAA,CANJA,OA/B+B;IAgC/BC,oBAhC+B,GAqC3B,IAAA,CALJA,oBAhC+B;IAiC/BC,oBAjC+B,GAqC3B,IAAA,CAJJA,oBAjC+B;IAkC/BC,cAlC+B,GAqC3B,IAAA,CAHJA,cAlC+B;IAmC/BC,gBAnC+B,GAqC3B,IAAA,CAFJA,gBAnC+B;IAoC5BC,IAAAA,4BACC,IAAA;EACJ,IAAMC,OAAO,GAAGvC,eAAe,CAACQ,KAAD,EAAQC,SAAR,CAA/B;EAEA,IAAM+B,OAAO,GAAG/C,OAAO,CACrB;IAAA,OAAMW,IAAI,IAAKM,OAAO,IAAIE,wBAAwB,KAAK,MADlC;EAAA,GAErB,CAACR,IAAD,EAAOM,OAAP,EAAgBE,wBAAhB,CAFqB,CAAvB;EAKA,IAAM6B,MAAM,GAAGxC,SAAS,CACtB;IAAA,OAAO;MACLyC,SAAS,EAAE;QACTC,eAAe,EAAEJ,OAAO,CAACK,IADhB;QAETC,YAAY,EAAEtC,IAAI,KAAK,SAATA,GAAqB,EAArBA,GAA0B;MAF/B,CADN;MAKLuC,kBAAkB,EAAE;QAClBD,YAAY,EAAEtC,IAAI,KAAK,SAATA,GAAqB,EAArBA,GAA0B,EADtB;QAElBwC,QAAQ,EAAE;MAFQ,CALf;MASLC,SAAS,EAAE;QACTC,aAAa,EAAE,KADN;QAETC,UAAU,EAAE,QAFH;QAGTC,YAAY,EACV7C,OAAO,KAAK,UAAZA,GACIkC,OAAO,GACLjC,IAAI,KAAK,SAATA,GACE,EADFA,GAEE,CAHG,GAILA,IAAI,KAAK,SAATA,GACA,EADAA,GAEA,EAPND,GAQIC,IAAI,KAAK,SAATA,GACA,EADAA,GAEA,CAdG;QAeT6C,UAAU,EAAE9C,OAAO,KAAK,UAAZA,GAA0BC,IAAI,KAAK,SAATA,GAAqB,EAArBA,GAA0B,EAApDD,GAA0DC,IAAI,KAAK,SAATA,GAAqB,EAArBA,GAA0B,CAfvF;QAgBT8C,eAAe,EAAE9C,IAAI,KAAK,SAATA,GAAqB,EAArBA,GAA0B;MAhBlC,CATN;MA2BL+C,aAAa,EAAE;QACbC,cAAc,EAAE,QADH;QAEbL,UAAU,EAAE,QAFC;QAGbM,KAAK,EAAE,EAHM;QAIbC,MAAM,EAAE;MAJK,CA3BV;MAiCLC,cAAc,EAAE;QACdC,WAAW,EAAEnB,OAAO,GAAIjC,IAAI,KAAK,SAATA,GAAqB,EAArBA,GAA0B,CAA9B,GAAmC;MADzC,CAjCX;MAoCLqD,uBAAuB,kCAClBC,UAAU,CAACC,kBADS;QAEvBP,cAAc,EAAE,QAFO;QAGvBL,UAAU,EAAE,QAHW;QAIvBP,eAAe,EAAEJ,OAAO,CAACK;MAAAA;IAxCtB,CAAP;EAAA,CADsB,EA4CtB,CAACtC,OAAD,EAAUC,IAAV,EAAgBgC,OAAhB,EAAyBC,OAAzB,CA5CsB,CAAxB;EA+CA,IAAMuB,QAAQ,GAAGrE,MAAM,CAAC,IAAIsE,QAAQ,CAACC,KAAb,CAAmBpD,OAAO,GAAG,CAAH,GAAO,CAAjC,CAAD,CAANnB,CAA4CwE,OAA7D;EAEA1E,SAAS,CAAC,YAAM;IACdwE,QAAQ,CAACG,MAATH,CAAgBD,QAAhBC,EAA0B;MACxBI,OAAO,EAAEvD,OAAO,GAAG,CAAH,GAAO,CADC;MAExBwD,QAAQ,EAAE,GAFc;MAGxBC,eAAe,EAAE;IAHO,CAA1BN,CAAAA,CAIGO,KAJHP,EAAAA;EAKD,CANQ,EAMN,CAACnD,OAAD,CANM,CAATrB;EAQA,IAAMgF,mBAAmB,GAAG,SAAtBA,mBAAmB,GAAS;IAChC,IAAI,CAAC7D,gBAAL,EAAuB,OAAO,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAA;MAAmB,KAAK,EAAE4B,OAAO,CAACkC;IAAlC,CAAA,CAAP;IACvB,QAAQ,OAAO9D,gBAAf;MACE,KAAK,QAAL;QACE,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;UAAM,OAAO,EAAC,QAAd;UAAuB,KAAK,EAAE;YAAEH,KAAK,EAAE+B,OAAO,CAACkC;UAAjB;QAA9B,CAAA,EACG9D,gBADH,CADF;MAKF,KAAK,UAAL;QACE,OAAOA,gBAAgB,CAAC;UAAEH,KAAK,EAAE+B,OAAO,CAACkC;QAAjB,CAAD,CAAvB;MACF;QACE,OAAO9D,gBAAP;IAAA;EAEL,CAdD;EAgBA,IAAM+D,OAAO,GAAG,SAAVA,OAAO,GAAS;IACpB,IAAIhE,OAAO,IAAIE,wBAAwB,KAAK,MAA5C,EAAoD,OAAO4D,mBAAmB,EAA1B;IACpD,OAAO,OAAOpE,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC;MAAEI,KAAK,EAAE+B,OAAO,CAACkC,EAAjB;MAAqBlE,IAAI,EAAE;IAA3B,CAAD,CAAjC,GAAqEH,IAA5E;EACD,CAHD;EAKA,IAAMuE,QAAQ,GAAG,SAAXA,QAAQ,GAAS;IACrB,QAAQ,OAAOtE,KAAf;MACE,KAAK,QAAL;QACE,OACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;UAAM,OAAO,EAAC,QAAd;UAAuB,UAAU,EAAE,KAAnC;UAA0C,KAAK,EAAE,CAAC;YAAEG,KAAK,EAAE+B,OAAO,CAACkC;UAAjB,CAAD,EAAwBtD,UAAxB;QAAjD,CAAA,EACGd,KADH,CADF;MAKF,KAAK,UAAL;QACE,OAAOA,KAAK,CAAC;UAAEG,KAAK,EAAE+B,OAAO,CAACkC;QAAjB,CAAD,CAAZ;MACF;QACE,OAAOpE,KAAP;IAAA;EAEL,CAbD;EAeA,gBAA8BV,QAAQ,CAAC,KAAD,CAAtC;IAAA;IAAOiF,OAAD;IAAUC,UAAV;EAEN,IAAMC,aAAa,GAAGvF,WAAW,CAC9BwF,UAAAA,KAAD,EAAkC;IAChCvD,SAAS,KAAA,IAATA,IAAAA,SAAS,KAAA,KAAA,CAATA,GAAAA,KAAAA,CAAAA,GAAAA,SAAS,CAAGuD,KAAH,CAATvD;IACAqD,UAAU,CAAC,IAAD,CAAVA;EACD,CAJ8B,EAK/B,CAACrD,SAAD,CAL+B,CAAjC;EAQA,IAAMwD,cAAc,GAAGzF,WAAW,CAC/BwF,UAAAA,KAAD,EAAkC;IAChCtD,UAAU,KAAA,IAAVA,IAAAA,UAAU,KAAA,KAAA,CAAVA,GAAAA,KAAAA,CAAAA,GAAAA,UAAU,CAAGsD,KAAH,CAAVtD;IACAoD,UAAU,CAAC,KAAD,CAAVA;EACD,CAJ+B,EAKhC,CAACpD,UAAD,CALgC,CAAlC;EAQA,IAAMwD,iBAAiB,GAAG/E,oBAAoB,CAAC0E,OAAO,GAAG,EAAH,GAAQ,CAAhB,CAA9C;EAEA,OACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAA,QAAA,CAAA;IAAS,KAAK,EAAE,CAACK,iBAAD,EAAoBxC,MAAM,CAACC,SAA3B,EAAsC;MAAEwC,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAEpB;MAAT,CAAD;IAAb,CAAtC,EAA4EjD,KAA5E;EAAhB,CAAA,EAAwGwB,IAAxG,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAE,CAACG,MAAM,CAACK,kBAAR,EAA4B/B,uBAA5B;EAAb,CAAA,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAA;IACE,KAAK,EAAE,CAAC0B,MAAM,CAACO,SAAR,EAAmBhC,qBAAnB,CADT;IAEE,WAAW,EAAEK,WAFf;IAGE,gBAAgB,EAAEC,gBAAF,KAAA,IAAA,IAAEA,gBAAF,KAAA,KAAA,CAAA,GAAEA,gBAAF,GAAsBiB,OAAO,CAACkC,EAHhD;IAIE,OAAO,EAAElD,OAJX;IAKE,SAAS,EAAEuD,aALb;IAME,UAAU,EAAEE,cANd;IAOE,WAAW,EAAEtD,WAPf;IAQE,MAAM,EAAEC,MARV;IASE,OAAO,EAAEC,OATX;IAUE,YAAY,EAAEC,YAVhB;IAWE,YAAY,EAAEC,YAXhB;IAYE,cAAc,EAAEC,cAZlB;IAaE,QAAQ,EAAEC,QAbZ;IAcE,OAAO,EAAEC,OAdX;IAeE,oBAAoB,EAAEC,oBAfxB;IAgBE,oBAAoB,EAAEC,oBAhBxB;IAiBE,cAAc,EAAEC,cAjBlB;IAkBE,gBAAgB,EAAEC;EAlBpB,CAAA,EAoBGG,OAAO,IAAI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAE,CAACC,MAAM,CAACa,aAAR,EAAuBrC,kBAAvB;EAAb,CAAA,EAA0DyD,OAAO,EAAjE,CApBd,EAqBGpE,OAAO,KAAK,UAAZA,IAA0B,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAE,CAACmC,MAAM,CAACiB,cAAR,EAAwBxC,mBAAxB;EAAb,CAAA,EAA4DyD,QAAQ,EAApE,CArB7B,EAuBGjE,OAAO,IAAIE,wBAAwB,KAAK,SAAxCF,IACC,KAAA,CAAA,aAAA,CAAC,IAAD,EAAA;IAAM,KAAK,EAAE,CAAC+B,MAAM,CAACmB,uBAAR,EAAiCxC,4BAAjC;EAAb,CAAA,EAA8EoD,mBAAmB,EAAjG,CAxBJ,CADF,CADF,CADF;AAiCD,CA/LD;AAiMA,eAAerE,GAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Animated, GestureResponderEvent, StyleProp, StyleSheet, TextStyle, View, ViewStyle } from 'react-native';\nimport Surface, { SurfaceProps } from './Surface';\nimport Pressable, { PressableProps } from './Pressable';\nimport Text from './Text';\nimport ActivityIndicator from './ActivityIndicator';\nimport { Color, usePaletteColor } from './hooks/use-palette-color';\nimport { useStyles } from './hooks/use-styles';\nimport { useAnimatedElevation } from './hooks/use-animated-elevation';\n\nexport interface FABProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  icon?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n\n  label?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  variant?: 'standard' | 'extended';\n\n  size?: 'default' | 'mini';\n\n  color?: Color;\n\n  tintColor?: Color;\n\n  loading?: boolean;\n\n  loadingIndicator?: string | React.ReactElement | ((props: { color: string }) => React.ReactElement | null) | null;\n\n  loadingIndicatorPosition?: 'icon' | 'overlay';\n\n  visible?: boolean;\n\n  pressableContainerStyle?: StyleProp<ViewStyle>;\n\n  contentContainerStyle?: PressableProps['style'];\n\n  iconContainerStyle?: StyleProp<ViewStyle>;\n\n  labelContainerStyle?: StyleProp<ViewStyle>;\n\n  labelStyle?: StyleProp<TextStyle>;\n\n  loadingOverlayContainerStyle?: StyleProp<ViewStyle>;\n}\n\nconst FAB: React.FC<FABProps> = ({\n  icon,\n  label,\n  variant = 'standard',\n  size = 'default',\n  color = 'secondary',\n  tintColor,\n  loading = false,\n  loadingIndicator,\n  loadingIndicatorPosition = 'icon',\n  visible = true,\n  style,\n  pressableContainerStyle,\n  contentContainerStyle,\n  iconContainerStyle,\n  labelContainerStyle,\n  labelStyle,\n  loadingOverlayContainerStyle,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n  ...rest\n}) => {\n  const palette = usePaletteColor(color, tintColor);\n\n  const hasIcon = useMemo(\n    () => icon || (loading && loadingIndicatorPosition === 'icon'),\n    [icon, loading, loadingIndicatorPosition]\n  );\n\n  const styles = useStyles(\n    () => ({\n      container: {\n        backgroundColor: palette.main,\n        borderRadius: size === 'default' ? 28 : 20,\n      },\n      pressableContainer: {\n        borderRadius: size === 'default' ? 28 : 20,\n        overflow: 'hidden',\n      },\n      pressable: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingStart:\n          variant === 'extended'\n            ? hasIcon\n              ? size === 'default'\n                ? 12\n                : 6\n              : size === 'default'\n              ? 20\n              : 10\n            : size === 'default'\n            ? 16\n            : 8,\n        paddingEnd: variant === 'extended' ? (size === 'default' ? 20 : 10) : size === 'default' ? 16 : 8,\n        paddingVertical: size === 'default' ? 16 : 8,\n      },\n      iconContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: 24,\n        height: 24,\n      },\n      labelContainer: {\n        marginStart: hasIcon ? (size === 'default' ? 12 : 6) : 0,\n      },\n      loadingOverlayContainer: {\n        ...StyleSheet.absoluteFillObject,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: palette.main,\n      },\n    }),\n    [variant, size, palette, hasIcon]\n  );\n\n  const animated = useRef(new Animated.Value(visible ? 1 : 0)).current;\n\n  useEffect(() => {\n    Animated.timing(animated, {\n      toValue: visible ? 1 : 0,\n      duration: 200,\n      useNativeDriver: false,\n    }).start();\n  }, [visible]);\n\n  const getLoadingIndicator = () => {\n    if (!loadingIndicator) return <ActivityIndicator color={palette.on} />;\n    switch (typeof loadingIndicator) {\n      case 'string':\n        return (\n          <Text variant=\"button\" style={{ color: palette.on }}>\n            {loadingIndicator}\n          </Text>\n        );\n      case 'function':\n        return loadingIndicator({ color: palette.on });\n      default:\n        return loadingIndicator;\n    }\n  };\n\n  const getIcon = () => {\n    if (loading && loadingIndicatorPosition === 'icon') return getLoadingIndicator();\n    return typeof icon === 'function' ? icon({ color: palette.on, size: 24 }) : icon;\n  };\n\n  const getLabel = () => {\n    switch (typeof label) {\n      case 'string':\n        return (\n          <Text variant=\"button\" selectable={false} style={[{ color: palette.on }, labelStyle]}>\n            {label}\n          </Text>\n        );\n      case 'function':\n        return label({ color: palette.on });\n      default:\n        return label;\n    }\n  };\n\n  const [pressed, setPressed] = useState(false);\n\n  const handlePressIn = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressIn?.(event);\n      setPressed(true);\n    },\n    [onPressIn]\n  );\n\n  const handlePressOut = useCallback(\n    (event: GestureResponderEvent) => {\n      onPressOut?.(event);\n      setPressed(false);\n    },\n    [onPressOut]\n  );\n\n  const animatedElevation = useAnimatedElevation(pressed ? 12 : 6);\n\n  return (\n    <Surface style={[animatedElevation, styles.container, { transform: [{ scale: animated }] }, style]} {...rest}>\n      <View style={[styles.pressableContainer, pressableContainerStyle]}>\n        <Pressable\n          style={[styles.pressable, contentContainerStyle]}\n          pressEffect={pressEffect}\n          pressEffectColor={pressEffectColor ?? palette.on}\n          onPress={onPress}\n          onPressIn={handlePressIn}\n          onPressOut={handlePressOut}\n          onLongPress={onLongPress}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          delayLongPress={delayLongPress}\n          disabled={disabled}\n          hitSlop={hitSlop}\n          pressRetentionOffset={pressRetentionOffset}\n          android_disableSound={android_disableSound}\n          android_ripple={android_ripple}\n          testOnly_pressed={testOnly_pressed}\n        >\n          {hasIcon && <View style={[styles.iconContainer, iconContainerStyle]}>{getIcon()}</View>}\n          {variant === 'extended' && <View style={[styles.labelContainer, labelContainerStyle]}>{getLabel()}</View>}\n\n          {loading && loadingIndicatorPosition === 'overlay' && (\n            <View style={[styles.loadingOverlayContainer, loadingOverlayContainerStyle]}>{getLoadingIndicator()}</View>\n          )}\n        </Pressable>\n      </View>\n    </Surface>\n  );\n};\n\nexport default FAB;\n"]},"metadata":{},"sourceType":"module"}