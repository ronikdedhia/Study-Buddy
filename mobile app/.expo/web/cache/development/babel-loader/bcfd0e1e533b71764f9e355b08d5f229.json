{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { getValidChildren } from \"./utilities\";\nvar Selector = function Selector(_ref) {\n  var childrenStyle = _ref.childrenStyle,\n    children = _ref.children;\n  var styles = useMemo(function () {\n    return Array.isArray(childrenStyle) ? childrenStyle.flat(Infinity) : [childrenStyle];\n  }, [childrenStyle]);\n  var validChildren = getValidChildren(children);\n  return React.createElement(React.Fragment, null, validChildren.map(function (child, index) {\n    return React.cloneElement(child, {\n      style: [child.props.style, styles.map(function (style) {\n        return typeof style === 'function' ? style(index, validChildren.length) : style;\n      })]\n    });\n  }));\n};\nexport default Selector;\nexport var select = function select(selector) {\n  return function (style) {\n    return function (index, length) {\n      return selector(index, length) ? style : null;\n    };\n  };\n};\nexport var firstChild = select(function (index) {\n  return index === 0;\n});\nexport var notFirstChild = select(function (index) {\n  return index !== 0;\n});\nexport var lastChild = select(function (index, length) {\n  return index === length - 1;\n});\nexport var notLastChild = select(function (index, length) {\n  return index !== length - 1;\n});\nexport var even = select(function (index) {\n  return index % 2 === 0;\n});\nexport var odd = select(function (index) {\n  return index % 2 !== 0;\n});","map":{"version":3,"sources":["Selector.tsx"],"names":["React","useMemo","getValidChildren","Selector","childrenStyle","children","styles","Array","isArray","flat","Infinity","validChildren","map","child","index","cloneElement","style","props","length","select","selector","firstChild","notFirstChild","lastChild","notLastChild","even","odd"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AAEA,SAASC,gBAAT;AAeA,IAAMC,QAAiC,GAAG,SAApCA,QAAiC,CAAG,IAAA,EAAiC;EAAhC,IAAEC,aAAF,GAAgC,IAAA,CAA9BA,aAAF;IAAiBC,QAAAA,GAAe,IAAA,CAAfA,QAAAA;EAC1D,IAAMC,MAAM,GAAGL,OAAO,CACpB;IAAA,OACEM,KAAK,CAACC,OAAND,CAAcH,aAAdG,CAAAA,GACIH,aAAa,CAACK,IAAdL,CAAmBM,QAAnBN,CADJG,GAEI,CAACH,aAAD,CAJc;EAAA,GAKpB,CAACA,aAAD,CALoB,CAAtB;EAQA,IAAMO,aAAa,GAAGT,gBAAgB,CAACG,QAAD,CAAtC;EAEA,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,aAAa,CAACO,GAAd,CAAkB,UAACC,KAAD,EAAQC,KAAR;IAAA,OACjB,KAAK,CAACC,YAAN,CAAmBF,KAAnB,EAA0B;MACxBG,KAAK,EAAE,CACLH,KAAK,CAACI,KAANJ,CAAYG,KADP,EAELV,MAAM,CAACM,GAAPN,CAAYU,UAAAA,KAAD;QAAA,OACT,OAAOA,KAAP,KAAiB,UAAjB,GACIA,KAAK,CAACF,KAAD,EAAQH,aAAa,CAACO,MAAtB,CADT,GAEIF,KAHNV;MAAAA,EAFK;IADiB,CAA1B,CADD;EAAA,EADH,CADF;AAgBD,CA3BD;AA6BA,eAAeH,QAAf;AAEA,OAAO,IAAMgB,MAAM,GAChBC,SADUD,MAAM,CAChBC,QAAD;EAAA,OACCJ,UAAAA,KAAD;IAAA,OACA,UAACF,KAAD,EAAgBI,MAAhB;MAAA,OACEE,QAAQ,CAACN,KAAD,EAAQI,MAAR,CAARE,GAA0BJ,KAA1BI,GAAkC,IAJ/B;IAAA;EAAA;AAAA;AAMP,OAAO,IAAMC,UAAU,GAAGF,MAAM,CAAEL,UAAAA,KAAD;EAAA,OAAWA,KAAK,KAAK,CAAtB;AAAA,EAAzB;AAEP,OAAO,IAAMQ,aAAa,GAAGH,MAAM,CAAEL,UAAAA,KAAD;EAAA,OAAWA,KAAK,KAAK,CAAtB;AAAA,EAA5B;AAEP,OAAO,IAAMS,SAAS,GAAGJ,MAAM,CAAC,UAACL,KAAD,EAAQI,MAAR;EAAA,OAAmBJ,KAAK,KAAKI,MAAM,GAAG,CAAvC;AAAA,EAAxB;AAEP,OAAO,IAAMM,YAAY,GAAGL,MAAM,CAAC,UAACL,KAAD,EAAQI,MAAR;EAAA,OAAmBJ,KAAK,KAAKI,MAAM,GAAG,CAAvC;AAAA,EAA3B;AAEP,OAAO,IAAMO,IAAI,GAAGN,MAAM,CAAEL,UAAAA,KAAD;EAAA,OAAWA,KAAK,GAAG,CAARA,KAAc,CAA1B;AAAA,EAAnB;AAEP,OAAO,IAAMY,GAAG,GAAGP,MAAM,CAAEL,UAAAA,KAAD;EAAA,OAAWA,KAAK,GAAG,CAARA,KAAc,CAA1B;AAAA,EAAlB","sourcesContent":["import React, { useMemo } from 'react';\nimport type { ImageStyle, StyleProp, TextStyle, ViewStyle } from 'react-native';\nimport { getValidChildren } from './utilities';\n\ntype Style = StyleProp<ViewStyle | TextStyle | ImageStyle>;\n\ntype ChildrenStyle = Style | ((index: number, length: number) => Style);\n\ntype ChildrenStyleProp = ChildrenStyle | Array<ChildrenStyleProp>;\n\nexport interface SelectorProps {\n  /**\n   * A style object to apply to each child.\n   */\n  childrenStyle?: ChildrenStyleProp;\n}\n\nconst Selector: React.FC<SelectorProps> = ({ childrenStyle, children }) => {\n  const styles = useMemo(\n    () =>\n      Array.isArray(childrenStyle)\n        ? childrenStyle.flat(Infinity)\n        : [childrenStyle],\n    [childrenStyle]\n  );\n\n  const validChildren = getValidChildren(children);\n\n  return (\n    <>\n      {validChildren.map((child, index) =>\n        React.cloneElement(child, {\n          style: [\n            child.props.style,\n            styles.map((style) =>\n              typeof style === 'function'\n                ? style(index, validChildren.length)\n                : style\n            ),\n          ],\n        })\n      )}\n    </>\n  );\n};\n\nexport default Selector;\n\nexport const select =\n  (selector: (index: number, length: number) => boolean) =>\n  (style: Style) =>\n  (index: number, length: number) =>\n    selector(index, length) ? style : null;\n\nexport const firstChild = select((index) => index === 0);\n\nexport const notFirstChild = select((index) => index !== 0);\n\nexport const lastChild = select((index, length) => index === length - 1);\n\nexport const notLastChild = select((index, length) => index !== length - 1);\n\nexport const even = select((index) => index % 2 === 0);\n\nexport const odd = select((index) => index % 2 !== 0);\n"]},"metadata":{},"sourceType":"module"}