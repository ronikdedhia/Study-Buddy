{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Divider from \"./Divider\";\nimport Text from \"./Text\";\nimport Pressable from \"./Pressable\";\nimport { useSurfaceScale } from \"./hooks/use-surface-scale\";\nvar ListItem = function ListItem(_ref) {\n  var title = _ref.title,\n    secondaryText = _ref.secondaryText,\n    overline = _ref.overline,\n    meta = _ref.meta,\n    _ref$leadingMode = _ref.leadingMode,\n    leadingMode = _ref$leadingMode === void 0 ? 'icon' : _ref$leadingMode,\n    leading = _ref.leading,\n    trailing = _ref.trailing,\n    pressEffect = _ref.pressEffect,\n    pressEffectColor = _ref.pressEffectColor,\n    onPress = _ref.onPress,\n    onPressIn = _ref.onPressIn,\n    onPressOut = _ref.onPressOut,\n    onLongPress = _ref.onLongPress,\n    onBlur = _ref.onBlur,\n    onFocus = _ref.onFocus,\n    onMouseEnter = _ref.onMouseEnter,\n    onMouseLeave = _ref.onMouseLeave,\n    delayLongPress = _ref.delayLongPress,\n    disabled = _ref.disabled,\n    hitSlop = _ref.hitSlop,\n    pressRetentionOffset = _ref.pressRetentionOffset,\n    android_disableSound = _ref.android_disableSound,\n    android_ripple = _ref.android_ripple,\n    testOnly_pressed = _ref.testOnly_pressed;\n  var scale = useSurfaceScale();\n  return React.createElement(Pressable, {\n    style: {\n      backgroundColor: scale(0).hex()\n    },\n    pressEffect: pressEffect,\n    pressEffectColor: pressEffectColor,\n    onPress: onPress,\n    onPressIn: onPressIn,\n    onPressOut: onPressOut,\n    onLongPress: onLongPress,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    delayLongPress: delayLongPress,\n    disabled: disabled,\n    hitSlop: hitSlop,\n    pressRetentionOffset: pressRetentionOffset,\n    android_disableSound: android_disableSound,\n    android_ripple: android_ripple,\n    testOnly_pressed: testOnly_pressed\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginVertical: 12\n    }\n  }, leading && React.createElement(View, {\n    style: {\n      width: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 100,\n      height: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 56,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginStart: leadingMode === 'image' ? 0 : 16\n    }\n  }, leading), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginHorizontal: 16\n    }\n  }, overline && React.createElement(Text, {\n    selectable: false,\n    variant: \"overline\",\n    style: {\n      marginBottom: 2,\n      color: scale(0.6).hex()\n    }\n  }, overline), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center'\n    }\n  }, title && React.createElement(Text, {\n    selectable: false,\n    variant: \"subtitle1\",\n    style: {\n      color: scale(0.87).hex()\n    }\n  }, title), meta && React.createElement(Text, {\n    selectable: false,\n    variant: \"caption\",\n    style: {\n      color: scale(0.87).hex()\n    }\n  }, meta)), secondaryText && React.createElement(Text, {\n    selectable: false,\n    variant: \"body2\",\n    style: {\n      marginTop: 4,\n      color: scale(0.6).hex()\n    }\n  }, secondaryText)), trailing && React.createElement(View, {\n    style: {\n      width: 24,\n      height: 24,\n      marginEnd: 16,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, typeof trailing === 'function' ? trailing({\n    color: scale(0.87).hex(),\n    size: 24\n  }) : trailing)), React.createElement(Divider, {\n    leadingInset: leading ? leadingMode === 'icon' ? 56 : leadingMode === 'avatar' ? 88 : 116 : 16\n  }));\n};\nexport default ListItem;","map":{"version":3,"sources":["ListItem.tsx"],"names":["React","Divider","Text","Pressable","useSurfaceScale","ListItem","title","secondaryText","overline","meta","leadingMode","leading","trailing","pressEffect","pressEffectColor","onPress","onPressIn","onPressOut","onLongPress","onBlur","onFocus","onMouseEnter","onMouseLeave","delayLongPress","disabled","hitSlop","pressRetentionOffset","android_disableSound","android_ripple","testOnly_pressed","scale","backgroundColor","hex","flexDirection","alignItems","marginVertical","width","height","justifyContent","marginStart","flex","marginHorizontal","marginBottom","color","marginTop","marginEnd","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport Divider from './Divider';\nimport Text from './Text';\nimport type { SurfaceProps } from './Surface';\nimport Pressable, { PressableProps } from './Pressable';\nimport { useSurfaceScale } from './hooks/use-surface-scale';\n\nexport interface ListItemProps extends Omit<SurfaceProps, 'hitSlop'>, Omit<PressableProps, 'style' | 'children'> {\n  title?: string;\n\n  secondaryText?: string;\n\n  overline?: string;\n\n  meta?: string;\n\n  leadingMode?: 'icon' | 'avatar' | 'image';\n\n  leading?: React.ReactElement;\n\n  trailing?: React.ReactElement | ((props: { color: string; size: number }) => React.ReactElement | null) | null;\n}\n\nconst ListItem: React.FC<ListItemProps> = ({\n  title,\n  secondaryText,\n  overline,\n  meta,\n  leadingMode = 'icon',\n  leading,\n  trailing,\n\n  pressEffect,\n  pressEffectColor,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onLongPress,\n  onBlur,\n  onFocus,\n  onMouseEnter,\n  onMouseLeave,\n  delayLongPress,\n  disabled,\n  hitSlop,\n  pressRetentionOffset,\n  android_disableSound,\n  android_ripple,\n  testOnly_pressed,\n}) => {\n  const scale = useSurfaceScale();\n\n  return (\n    <Pressable\n      style={{ backgroundColor: scale(0).hex() }}\n      pressEffect={pressEffect}\n      pressEffectColor={pressEffectColor}\n      onPress={onPress}\n      onPressIn={onPressIn}\n      onPressOut={onPressOut}\n      onLongPress={onLongPress}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      delayLongPress={delayLongPress}\n      disabled={disabled}\n      hitSlop={hitSlop}\n      pressRetentionOffset={pressRetentionOffset}\n      android_disableSound={android_disableSound}\n      android_ripple={android_ripple}\n      testOnly_pressed={testOnly_pressed}\n    >\n      <View style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 12 }}>\n        {leading && (\n          <View\n            style={{\n              width: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 100,\n              height: leadingMode === 'icon' ? 24 : leadingMode === 'avatar' ? 56 : 56,\n              justifyContent: 'center',\n              alignItems: 'center',\n              marginStart: leadingMode === 'image' ? 0 : 16,\n            }}\n          >\n            {leading}\n          </View>\n        )}\n        <View style={{ flex: 1, marginHorizontal: 16 }}>\n          {overline && (\n            <Text selectable={false} variant=\"overline\" style={{ marginBottom: 2, color: scale(0.6).hex() }}>\n              {overline}\n            </Text>\n          )}\n          <View style={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n            {title && (\n              <Text selectable={false} variant=\"subtitle1\" style={{ color: scale(0.87).hex() }}>\n                {title}\n              </Text>\n            )}\n            {meta && (\n              <Text selectable={false} variant=\"caption\" style={{ color: scale(0.87).hex() }}>\n                {meta}\n              </Text>\n            )}\n          </View>\n          {secondaryText && (\n            <Text selectable={false} variant=\"body2\" style={{ marginTop: 4, color: scale(0.6).hex() }}>\n              {secondaryText}\n            </Text>\n          )}\n        </View>\n        {trailing && (\n          <View\n            style={{\n              width: 24,\n              height: 24,\n              marginEnd: 16,\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            {typeof trailing === 'function' ? trailing({ color: scale(0.87).hex(), size: 24 }) : trailing}\n          </View>\n        )}\n      </View>\n      <Divider leadingInset={leading ? (leadingMode === 'icon' ? 56 : leadingMode === 'avatar' ? 88 : 116) : 16} />\n    </Pressable>\n  );\n};\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}