{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"generateBackgroundColor\", {\n  enumerable: true,\n  get: function get() {\n    return _helpers.generateBackgroundColor;\n  }\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactNative = require(\"react-native-web/dist/index\");\nrequire(\"abortcontroller-polyfill/dist/abortcontroller-polyfill-only\");\nvar _components = require(\"./components/\");\nvar _helpers = require(\"./helpers\");\nvar _jsxFileName = \"/Users/Avishay.Bar/dev/personal/react-native-user-avatar/src/index.js\";\n;\nvar UserAvatar = function UserAvatar(props) {\n  var name = props.name,\n    src = props.src,\n    bgColor = props.bgColor,\n    bgColors = props.bgColors,\n    textColor = props.textColor,\n    size = props.size,\n    imageStyle = props.imageStyle,\n    style = props.style,\n    borderRadius = props.borderRadius,\n    component = props.component,\n    noUpperCase = props.noUpperCase,\n    textStyle = props.textStyle;\n  if (typeof size === 'string') {\n    console.warn('size prop should be a number');\n    size = parseInt(size);\n  }\n  var _useState = (0, _react.useState)(_react.default.createElement(_components.TextAvatar, {\n      textColor: textColor,\n      size: size,\n      name: name,\n      noUpperCase: noUpperCase,\n      textStyle: textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    })),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    inner = _useState2[0],\n    setInner = _useState2[1];\n  (0, _react.useEffect)(function () {\n    if (component) {\n      setInner(_react.default.createElement(_components.CustomAvatar, {\n        size: size,\n        component: component,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }\n      }));\n    } else if (src) {\n      var controller = new (AbortController || window.AbortController)();\n      (0, _helpers.fetchImage)(src, {\n        signal: controller.signal\n      }).then(function (isImage) {\n        if (isImage) {\n          setInner(_react.default.createElement(_components.ImageAvatar, {\n            src: src,\n            size: size,\n            imageStyle: imageStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }\n          }));\n        }\n      });\n      return function () {\n        return controller.abort();\n      };\n    } else {\n      setInner(_react.default.createElement(_components.TextAvatar, {\n        textColor: textColor,\n        size: size,\n        name: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }\n      }));\n    }\n  }, [textColor, size, name, component, imageStyle, src]);\n  return _react.default.createElement(_reactNative.View, {\n    style: [(0, _helpers.generateBackgroundStyle)(name, bgColor, bgColors), (0, _helpers.getContainerStyle)(size, src, borderRadius), style],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, inner);\n};\nUserAvatar.propTypes = {\n  name: _propTypes.default.string,\n  src: _propTypes.default.string,\n  bgColor: _propTypes.default.string,\n  bgColors: _propTypes.default.array,\n  textColor: _propTypes.default.string,\n  size: _propTypes.default.number,\n  imageStyle: _propTypes.default.object,\n  style: _propTypes.default.object,\n  textStyle: _propTypes.default.object,\n  borderRadius: _propTypes.default.number,\n  component: _propTypes.default.any,\n  noUpperCase: _propTypes.default.bool,\n  textStyle: _propTypes.default.object\n};\nUserAvatar.defaultProps = {\n  size: 32,\n  textColor: '#fff',\n  name: 'John Doe',\n  bgColors: ['#2ecc71', '#3498db', '#8e44ad', '#e67e22', '#e74c3c', '#1abc9c', '#2c3e50'],\n  textStyle: {}\n};\nvar _default = UserAvatar;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["require","UserAvatar","props","name","src","bgColor","bgColors","textColor","size","imageStyle","style","borderRadius","component","noUpperCase","textStyle","console","warn","parseInt","_react","_components","__source","fileName","lineNumber","columnNumber","_useState2","inner","setInner","controller","AbortController","window","signal","then","isImage","abort","_reactNative","propTypes","PropTypes","string","array","number","object","any","bool","defaultProps"],"sources":["index.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {View} from 'react-native';\nimport 'abortcontroller-polyfill/dist/abortcontroller-polyfill-only';\n\nimport {\n  TextAvatar,\n  ImageAvatar,\n  CustomAvatar,\n} from './components/'; ;\nimport {\n  fetchImage,\n  getContainerStyle,\n  generateBackgroundStyle,\n  generateBackgroundColor,\n} from './helpers';\n\nconst UserAvatar = (props) => {\n  let {\n    name,\n    src,\n    bgColor,\n    bgColors,\n    textColor,\n    size,\n    imageStyle,\n    style,\n    borderRadius,\n    component,\n    noUpperCase,\n    textStyle,\n  } = props;\n\n  // Validations\n  if (typeof (size) === 'string') {\n    console.warn('size prop should be a number');\n    size = parseInt(size);\n  }\n\n  const [inner, setInner] = useState(\n      <TextAvatar\n        textColor={textColor}\n        size={size}\n        name={name}\n        noUpperCase={noUpperCase}\n        textStyle={textStyle}\n      />);\n\n  useEffect(() => {\n    if (component) {\n      setInner(<CustomAvatar size={size} component={component} />);\n    } else if (src) {\n      const controller = new (AbortController || window.AbortController)();\n      fetchImage(src, {signal: controller.signal}).then((isImage) => {\n        if (isImage) {\n          setInner(\n              <ImageAvatar src={src} size={size} imageStyle={imageStyle} />,\n          );\n        }\n      });\n      return () => controller.abort();\n    } else {\n      setInner(<TextAvatar textColor={textColor} size={size} name={name} />);\n    }\n  }, [textColor, size, name, component, imageStyle, src]);\n\n  return (\n    <View style={[\n      generateBackgroundStyle(name, bgColor, bgColors),\n      getContainerStyle(size, src, borderRadius),\n      style]}\n    >\n      {inner}\n    </View>\n  );\n};\n\nUserAvatar.propTypes = {\n  name: PropTypes.string,\n  src: PropTypes.string,\n  bgColor: PropTypes.string,\n  bgColors: PropTypes.array,\n  textColor: PropTypes.string,\n  size: PropTypes.number,\n  imageStyle: PropTypes.object,\n  style: PropTypes.object,\n  textStyle: PropTypes.object,\n  borderRadius: PropTypes.number,\n  component: PropTypes.any,\n  noUpperCase: PropTypes.bool,\n  textStyle: PropTypes.object,\n};\n\nUserAvatar.defaultProps = {\n  size: 32,\n  textColor: '#fff',\n  name: 'John Doe',\n  bgColors: [ // from https://flatuicolors.com/\n    '#2ecc71', // emerald\n    '#3498db', // peter river\n    '#8e44ad', // wisteria\n    '#e67e22', // carrot\n    '#e74c3c', // alizarin\n    '#1abc9c', // turquoise\n    '#2c3e50', // midnight blue\n  ],\n  textStyle: {},\n};\n\nexport {generateBackgroundColor};\n\nexport default UserAvatar;\n"]},"metadata":{},"sourceType":"script"}