{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"type\", \"pictureSize\", \"poster\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { CodedError } from 'expo-modules-core';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport createElement from 'react-native-web/dist/exports/createElement';\nimport { CameraType } from \"./Camera.types\";\nimport CameraManager from \"./ExponentCameraManager.web\";\nimport { capture } from \"./WebCameraUtils\";\nimport { PictureSizes } from \"./WebConstants\";\nimport { useWebCameraStream } from \"./useWebCameraStream\";\nimport { useWebQRScanner } from \"./useWebQRScanner\";\nvar ExponentCamera = React.forwardRef(function (_ref, ref) {\n  var _props$barCodeScanner3, _props$barCodeScanner4;\n  var type = _ref.type,\n    pictureSize = _ref.pictureSize,\n    poster = _ref.poster,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var video = React.useRef(null);\n  var native = useWebCameraStream(video, type, props, {\n    onCameraReady: function onCameraReady() {\n      if (props.onCameraReady) {\n        props.onCameraReady();\n      }\n    },\n    onMountError: props.onMountError\n  });\n  var isQRScannerEnabled = React.useMemo(function () {\n    var _props$barCodeScanner, _props$barCodeScanner2;\n    return !!((_props$barCodeScanner = props.barCodeScannerSettings) != null && (_props$barCodeScanner2 = _props$barCodeScanner.barCodeTypes) != null && _props$barCodeScanner2.includes('qr') && !!props.onBarCodeScanned);\n  }, [(_props$barCodeScanner3 = props.barCodeScannerSettings) == null ? void 0 : _props$barCodeScanner3.barCodeTypes, props.onBarCodeScanned]);\n  useWebQRScanner(video, {\n    interval: (_props$barCodeScanner4 = props.barCodeScannerSettings) == null ? void 0 : _props$barCodeScanner4.interval,\n    isEnabled: isQRScannerEnabled,\n    captureOptions: {\n      scale: 1,\n      isImageMirror: native.type === CameraType.front\n    },\n    onScanned: function onScanned(event) {\n      if (props.onBarCodeScanned) {\n        props.onBarCodeScanned(event);\n      }\n    }\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      getAvailablePictureSizes: function () {\n        var _getAvailablePictureSizes = _asyncToGenerator(function* (ratio) {\n          return PictureSizes;\n        });\n        function getAvailablePictureSizes(_x) {\n          return _getAvailablePictureSizes.apply(this, arguments);\n        }\n        return getAvailablePictureSizes;\n      }(),\n      takePicture: function () {\n        var _takePicture = _asyncToGenerator(function* (options) {\n          var _video$current, _video$current2;\n          if (!video.current || ((_video$current = video.current) == null ? void 0 : _video$current.readyState) !== ((_video$current2 = video.current) == null ? void 0 : _video$current2.HAVE_ENOUGH_DATA)) {\n            throw new CodedError('ERR_CAMERA_NOT_READY', 'HTMLVideoElement does not have enough camera data to construct an image yet.');\n          }\n          var settings = native.mediaTrackSettings;\n          if (!settings) {\n            throw new CodedError('ERR_CAMERA_NOT_READY', 'MediaStream is not ready yet.');\n          }\n          return capture(video.current, settings, _objectSpread(_objectSpread({}, options), {}, {\n            onPictureSaved: function onPictureSaved(picture) {\n              if (options.onPictureSaved) {\n                options.onPictureSaved(picture);\n              }\n              if (props.onPictureSaved) {\n                props.onPictureSaved({\n                  nativeEvent: {\n                    data: picture,\n                    id: -1\n                  }\n                });\n              }\n            }\n          }));\n        });\n        function takePicture(_x2) {\n          return _takePicture.apply(this, arguments);\n        }\n        return takePicture;\n      }(),\n      resumePreview: function () {\n        var _resumePreview = _asyncToGenerator(function* () {\n          if (video.current) {\n            video.current.play();\n          }\n        });\n        function resumePreview() {\n          return _resumePreview.apply(this, arguments);\n        }\n        return resumePreview;\n      }(),\n      pausePreview: function () {\n        var _pausePreview = _asyncToGenerator(function* () {\n          if (video.current) {\n            video.current.pause();\n          }\n        });\n        function pausePreview() {\n          return _pausePreview.apply(this, arguments);\n        }\n        return pausePreview;\n      }()\n    };\n  }, [native.mediaTrackSettings, props.onPictureSaved]);\n  var isMuted = true;\n  var style = React.useMemo(function () {\n    var isFrontFacingCamera = native.type === CameraManager.Type.front;\n    return [StyleSheet.absoluteFill, styles.video, {\n      transform: isFrontFacingCamera ? [{\n        scaleX: -1\n      }] : undefined\n    }];\n  }, [native.type]);\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.videoWrapper, props.style]\n  }, React.createElement(Video, {\n    autoPlay: true,\n    playsInline: true,\n    muted: isMuted,\n    poster: poster,\n    pointerEvents: props.pointerEvents,\n    ref: video,\n    style: style\n  }), props.children);\n});\nexport default ExponentCamera;\nvar Video = React.forwardRef(function (props, ref) {\n  return createElement('video', _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref\n  }));\n});\nvar styles = StyleSheet.create({\n  videoWrapper: {\n    flex: 1,\n    alignItems: 'stretch'\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n  }\n});","map":{"version":3,"sources":["../src/ExponentCamera.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import { CodedError } from 'expo-modules-core';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport createElement from 'react-native-web/dist/exports/createElement';\n\nimport {\n  CameraCapturedPicture,\n  CameraNativeProps,\n  CameraPictureOptions,\n  CameraType,\n} from './Camera.types';\nimport CameraManager from './ExponentCameraManager.web';\nimport { capture } from './WebCameraUtils';\nimport { PictureSizes } from './WebConstants';\nimport { useWebCameraStream } from './useWebCameraStream';\nimport { useWebQRScanner } from './useWebQRScanner';\n\nexport interface ExponentCameraRef {\n  getAvailablePictureSizes: (ratio: string) => Promise<string[]>;\n  takePicture: (options: CameraPictureOptions) => Promise<CameraCapturedPicture>;\n  resumePreview: () => Promise<void>;\n  pausePreview: () => Promise<void>;\n}\n\nconst ExponentCamera = React.forwardRef(\n  (\n    { type, pictureSize, poster, ...props }: CameraNativeProps & { children?: React.ReactNode },\n    ref: React.Ref<ExponentCameraRef>\n  ) => {\n    const video = React.useRef<HTMLVideoElement | null>(null);\n\n    const native = useWebCameraStream(video, type as CameraType, props, {\n      onCameraReady() {\n        if (props.onCameraReady) {\n          props.onCameraReady();\n        }\n      },\n      onMountError: props.onMountError,\n    });\n\n    const isQRScannerEnabled = React.useMemo<boolean>(() => {\n      return !!(\n        props.barCodeScannerSettings?.barCodeTypes?.includes('qr') && !!props.onBarCodeScanned\n      );\n    }, [props.barCodeScannerSettings?.barCodeTypes, props.onBarCodeScanned]);\n\n    useWebQRScanner(video, {\n      interval: props.barCodeScannerSettings?.interval,\n      isEnabled: isQRScannerEnabled,\n      captureOptions: { scale: 1, isImageMirror: native.type === CameraType.front },\n      onScanned(event) {\n        if (props.onBarCodeScanned) {\n          props.onBarCodeScanned(event);\n        }\n      },\n      // onError: props.onMountError,\n    });\n\n    // const [pause, setPaused]\n\n    React.useImperativeHandle(\n      ref,\n      () => ({\n        async getAvailablePictureSizes(ratio: string): Promise<string[]> {\n          return PictureSizes;\n        },\n        async takePicture(options: CameraPictureOptions): Promise<CameraCapturedPicture> {\n          if (!video.current || video.current?.readyState !== video.current?.HAVE_ENOUGH_DATA) {\n            throw new CodedError(\n              'ERR_CAMERA_NOT_READY',\n              'HTMLVideoElement does not have enough camera data to construct an image yet.'\n            );\n          }\n          const settings = native.mediaTrackSettings;\n          if (!settings) {\n            throw new CodedError('ERR_CAMERA_NOT_READY', 'MediaStream is not ready yet.');\n          }\n\n          return capture(video.current, settings, {\n            ...options,\n            // This will always be defined, the option gets added to a queue in the upper-level. We should replace the original so it isn't called twice.\n            onPictureSaved(picture) {\n              if (options.onPictureSaved) {\n                options.onPictureSaved(picture);\n              }\n              if (props.onPictureSaved) {\n                props.onPictureSaved({ nativeEvent: { data: picture, id: -1 } });\n              }\n            },\n          });\n        },\n        async resumePreview(): Promise<void> {\n          if (video.current) {\n            video.current.play();\n          }\n        },\n        async pausePreview(): Promise<void> {\n          if (video.current) {\n            video.current.pause();\n          }\n        },\n      }),\n      [native.mediaTrackSettings, props.onPictureSaved]\n    );\n\n    // TODO(Bacon): Create a universal prop, on native the microphone is only used when recording videos.\n    // Because we don't support recording video in the browser we don't need the user to give microphone permissions.\n    const isMuted = true;\n\n    const style = React.useMemo<StyleProp<ViewStyle>>(() => {\n      const isFrontFacingCamera = native.type === CameraManager.Type.front;\n      return [\n        StyleSheet.absoluteFill,\n        styles.video,\n        {\n          // Flip the camera\n          transform: isFrontFacingCamera ? [{ scaleX: -1 }] : undefined,\n        },\n      ];\n    }, [native.type]);\n\n    return (\n      <View pointerEvents=\"box-none\" style={[styles.videoWrapper, props.style]}>\n        <Video\n          autoPlay\n          playsInline\n          muted={isMuted}\n          poster={poster}\n          // webkitPlaysinline\n          pointerEvents={props.pointerEvents}\n          ref={video}\n          style={style}\n        />\n        {props.children}\n      </View>\n    );\n  }\n);\n\nexport default ExponentCamera;\n\nconst Video = React.forwardRef(\n  (\n    props: React.ComponentProps<typeof View> & {\n      autoPlay?: boolean;\n      playsInline?: boolean;\n      muted?: boolean;\n      poster?: string;\n    },\n    ref: React.Ref<HTMLVideoElement>\n  ) => createElement('video', { ...props, ref })\n);\n\nconst styles = StyleSheet.create({\n  videoWrapper: {\n    flex: 1,\n    alignItems: 'stretch',\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}