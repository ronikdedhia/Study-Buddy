{"ast":null,"code":"import { useMemo } from 'react';\nimport chroma from 'chroma-js';\nimport { useTheme } from \"../base/ThemeContext\";\nexport var usePaletteColor = function usePaletteColor(main, on) {\n  var _useTheme = useTheme(),\n    palette = _useTheme.palette;\n  return useMemo(function () {\n    var _main = main;\n    if (palette[main]) _main = palette[main].main;else if (main.startsWith('on-') && palette[main.replace('on-', '')]) _main = palette[main.replace('on-', '')].on;\n    var _on;\n    if (on) {\n      if (palette[on]) _on = palette[on].main;else if (on.startsWith('on-') && palette[on.replace('on-', '')]) _on = palette[on.replace('on-', '')].on;else _on = on;\n    } else {\n      _on = chroma.contrast(_main, 'white') > 4.5 ? '#FFFFFF' : '#000000';\n    }\n    return {\n      main: _main,\n      on: _on\n    };\n  }, [palette, main, on]);\n};","map":{"version":3,"sources":["use-palette-color.ts"],"names":["useMemo","chroma","useTheme","usePaletteColor","main","on","palette","_main","startsWith","replace","_on","contrast"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAuBC,QAAvB;AAeA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAe,CAAIC,IAAD,EAAcC,EAAd,EAA2C;EACxE,gBAAoBH,QAAQ,EAA5B;IAAQI,OAAAA,aAAAA,OAAAA;EAER,OAAON,OAAO,CAAC,YAAM;IACnB,IAAIO,KAAK,GAAGH,IAAZ;IACA,IAAIE,OAAO,CAACF,IAAD,CAAX,EAAmBG,KAAK,GAAGD,OAAO,CAACF,IAAD,CAAPE,CAAcF,IAAtBG,CAAnB,KACK,IAAIH,IAAI,CAACI,UAALJ,CAAgB,KAAhBA,CAAAA,IAA0BE,OAAO,CAACF,IAAI,CAACK,OAALL,CAAa,KAAbA,EAAoB,EAApBA,CAAD,CAArC,EAAgEG,KAAK,GAAGD,OAAO,CAACF,IAAI,CAACK,OAALL,CAAa,KAAbA,EAAoB,EAApBA,CAAD,CAAPE,CAAiCD,EAAzCE;IAErE,IAAIG,GAAJ;IACA,IAAIL,EAAJ,EAAQ;MACN,IAAIC,OAAO,CAACD,EAAD,CAAX,EAAiBK,GAAG,GAAGJ,OAAO,CAACD,EAAD,CAAPC,CAAYF,IAAlBM,CAAjB,KACK,IAAIL,EAAE,CAACG,UAAHH,CAAc,KAAdA,CAAAA,IAAwBC,OAAO,CAACD,EAAE,CAACI,OAAHJ,CAAW,KAAXA,EAAkB,EAAlBA,CAAD,CAAnC,EAA4DK,GAAG,GAAGJ,OAAO,CAACD,EAAE,CAACI,OAAHJ,CAAW,KAAXA,EAAkB,EAAlBA,CAAD,CAAPC,CAA+BD,EAArCK,CAA5D,KACAA,GAAG,GAAGL,EAANK;IACN,CAJD,MAIO;MACLA,GAAG,GAAGT,MAAM,CAACU,QAAPV,CAAgBM,KAAhBN,EAAuB,OAAvBA,CAAAA,GAAkC,GAAlCA,GAAwC,SAAxCA,GAAoD,SAA1DS;IACD;IAED,OAAO;MAAEN,IAAI,EAAEG,KAAR;MAAeF,EAAE,EAAEK;IAAnB,CAAP;EACD,CAfa,EAeX,CAACJ,OAAD,EAAUF,IAAV,EAAgBC,EAAhB,CAfW,CAAd;AAgBD,CAnBM","sourcesContent":["import { useMemo } from 'react';\nimport chroma from 'chroma-js';\nimport { PaletteColor, useTheme } from '../base/ThemeContext';\n\nexport type Color =\n  | 'primary'\n  | 'secondary'\n  | 'background'\n  | 'surface'\n  | 'error'\n  | 'on-primary'\n  | 'on-secondary'\n  | 'on-background'\n  | 'on-surface'\n  | 'on-error'\n  | string;\n\nexport const usePaletteColor = (main: Color, on?: Color): PaletteColor => {\n  const { palette } = useTheme();\n\n  return useMemo(() => {\n    let _main = main;\n    if (palette[main]) _main = palette[main].main;\n    else if (main.startsWith('on-') && palette[main.replace('on-', '')]) _main = palette[main.replace('on-', '')].on;\n\n    let _on: string;\n    if (on) {\n      if (palette[on]) _on = palette[on].main;\n      else if (on.startsWith('on-') && palette[on.replace('on-', '')]) _on = palette[on.replace('on-', '')].on;\n      else _on = on;\n    } else {\n      _on = chroma.contrast(_main, 'white') > 4.5 ? '#FFFFFF' : '#000000';\n    }\n\n    return { main: _main, on: _on };\n  }, [palette, main, on]);\n};\n"]},"metadata":{},"sourceType":"module"}